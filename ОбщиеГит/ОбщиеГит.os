#Использовать ОбщиеСистема
#Использовать ОбщиеСтрока
#Использовать ОбщиеЗначение

Функция Гит()
	Возврат "D:\Tools\Git\bin\git.exe";
КонецФункции

Функция ГитКоманда(ГитКаталог, Команда)
	Возврат СтрЗаменить(СтрЗаменить(Гит() + " -C %ГитКаталог% %Команда%"
	, "%ГитКаталог%", ОбщиеСтрока.Обрамить(ГитКаталог)), "%Команда%", Команда);
КонецФункции

Функция ГитКомандаТекст(ГитКаталог, Команда) Экспорт
	Лог = ПолучитьИмяВременногоФайла();
	ОбщиеСистема.КомандаВыполнить(ГитКоманда(ГитКаталог, Команда + СтрЗаменить(" > %Лог%", "%Лог%", Лог)));
	Текст = СокрЛП(ОбщиеСистема.ПутьТекст(Лог, "UTF-8"));
	УдалитьФайлы(Лог);
	Возврат Текст;
КонецФункции

Процедура КомандаВыполнить(ГитКаталог, Команда) Экспорт
	ОбщиеСистема.КомандаВыполнить(ГитКоманда(ГитКаталог, Команда));
КонецПроцедуры

Функция ВерсияГитИдентификатор(ГитКаталог, Версия) Экспорт
	Возврат ГитКомандаТекст(ГитКаталог, СтрЗаменить("log --grep=v%Версия% --format=""%h""", "%Версия%", ОбщиеЗначение.ЧислоСтрока(Версия)));
КонецФункции

Процедура КоммитВыполнить(ГитКаталог, Комментарий, Автор, Дата, Знач Каталог = Неопределено) Экспорт
	КаталогУдалять = Каталог = Неопределено;
	Если КаталогУдалять Тогда
		Каталог = ПолучитьИмяВременногоФайла();
		СоздатьКаталог(Каталог);
	КонецЕсли;
	КомментарийПуть = ОбщиеСистема.КаталогПуть(Каталог, "comment.txt");
	ОбщиеСистема.ТекстЗаписать(Комментарий, КомментарийПуть, КодировкаТекста.UTF8NoBOM);
	КомандаПуть = ОбщиеСистема.КаталогПуть(Каталог, "commit.bat");
	ОбщиеСистема.ТекстЗаписать(СтрЗаменить(
	"SET GIT_AUTHOR_DATE=%Дата%
	|SET GIT_COMMITTER_DATE=%Дата%
	|", "%Дата%", Формат(Дата, "ДФ='yyyy-MM-dd HH:mm:ss'"))
	+ ГитКоманда(ГитКаталог, СтрЗаменить(СтрЗаменить("commit -a --file=%КомментарийПуть% --author=%Автор%"
	, "%КомментарийПуть%", ОбщиеСтрока.Обрамить(КомментарийПуть)), "%Автор%", ОбщиеСтрока.Обрамить(Автор)))
	+ "
	|EXIT /B %ERRORLEVEL%"	
	, КомандаПуть, КодировкаТекста.OEM);
	ОбщиеСистема.КомандаВыполнить(ОбщиеСтрока.Обрамить(КомандаПуть));
	Если КаталогУдалять Тогда
		УдалитьФайлы(Каталог);
	КонецЕсли;
КонецПроцедуры

Функция Автор(Имя, Почта) Экспорт
	Возврат СтрЗаменить(СтрЗаменить("%Имя% <%Почта%>", "%Имя%", Имя), "%Почта%", Почта);
КонецФункции

Функция ТекстСтрока(Текст, Номер)
	Строка = СтрПолучитьСтроку(Текст, Номер);
	Номер = Номер + 1;
	Возврат Строка;
КонецФункции

Функция ВерсииАвторы(ГитКаталог, КоличествоПоследних = 5) Экспорт
	//Команда = "HEAD~" + ОбщиеЗначение.ЧислоСтрока(КоличествоПоследних) + "..";
	Команда = "log --reverse --max-count " + ОбщиеЗначение.ЧислоСтрока(КоличествоПоследних) + " --pretty=format:";
	Хеши = ОбщиеСтрока.СтрокаМассив(ГитКомандаТекст(ГитКаталог, Команда + "%H"), Символы.ПС);
	ХешГраница = Хеши.ВГраница();
	Текст = ГитКомандаТекст(ГитКаталог, Команда + "%H%n%an%n%ae%n%aI%n%B");
	ТекстНомер = 1;
	ТекстКоличество = СтрЧислоСтрок(Текст);
	ВерсииАвторы = Новый Массив;
	Для Индекс = 0 По ХешГраница Цикл
		ВерсияАвтор = Новый Структура("Хеш, Автор, АвторПочта, АвторДата");
		Для Каждого ДанныеЭлемент Из ВерсияАвтор Цикл
			ВерсияАвтор[ДанныеЭлемент.Ключ] = ТекстСтрока(Текст, ТекстНомер);
		КонецЦикла;
		ВерсияАвтор.Вставить("Комментарий", "");
		ХешСледующий = ?(Индекс = ХешГраница, Неопределено, Хеши[Индекс + 1]);
		Разделитель = "";
		Пока ТекстНомер <= ТекстКоличество Цикл
			Строка = ТекстСтрока(Текст, ТекстНомер);
			Если Строка = ХешСледующий Тогда
				ТекстНомер = ТекстНомер - 1;
				ВерсияАвтор.Комментарий = Лев(ВерсияАвтор.Комментарий, СтрДлина(ВерсияАвтор.Комментарий) - 1);
				Прервать;
			Иначе
				ВерсияАвтор.Комментарий = ВерсияАвтор.Комментарий + Разделитель + Строка;
			КонецЕсли;
			Разделитель = Символы.ПС;
		КонецЦикла;
		ВерсииАвторы.Добавить(ВерсияАвтор);
	КонецЦикла;
	Возврат ВерсииАвторы;
КонецФункции

Процедура КомментарийИзменениеНачать(ГитКаталог, Хеш, КомментарийНовый) Экспорт
	КомандаВыполнить(ГитКаталог, "branch --no-track message-change-temp " + Хеш);
	КомандаВыполнить(ГитКаталог, "checkout --ignore-other-worktrees message-change-temp");
	ПустышкаПуть = ОбщиеСистема.КаталогПуть(ГитКаталог, Строка(Новый УникальныйИдентификатор));
	ОбщиеСистема.ТекстЗаписать("", ПустышкаПуть);
	КомандаВыполнить(ГитКаталог, СтрЗаменить("add --force -- %Пустышка%", "%Пустышка%", ОбщиеСтрока.Обрамить(ПустышкаПуть)));
	КомментарийПуть = ПолучитьИмяВременногоФайла();
	ОбщиеСистема.ТекстЗаписать(КомментарийНовый, КомментарийПуть, КодировкаТекста.UTF8NoBOM);
	КоммитКоманда = СтрЗаменить(СтрЗаменить("commit --amend --file=%КомментарийПуть% -o -- %ПустышкаПуть%"
	, "%КомментарийПуть%", ОбщиеСтрока.Обрамить(КомментарийПуть))
	, "%ПустышкаПуть%", ОбщиеСтрока.Обрамить(ПустышкаПуть));
	КомандаВыполнить(ГитКаталог, КоммитКоманда);
	КомандаВыполнить(ГитКаталог, СтрЗаменить("rm -- %ПустышкаПуть%", "%ПустышкаПуть%", ОбщиеСтрока.Обрамить(ПустышкаПуть)));
	КомандаВыполнить(ГитКаталог, КоммитКоманда);
	УдалитьФайлы(ПустышкаПуть);
КонецПроцедуры

Процедура КомментарийИзменениеПродолжить(ГитКаталог, Хеш, КомментарийНовый, ВерсияАвтор) Экспорт
	КомандаВыполнить(ГитКаталог, СтрЗаменить("cherry-pick --no-commit --allow-empty %Хеш%", "%Хеш%", Хеш));
	КоммитВыполнить(ГитКаталог, КомментарийНовый, Автор(ВерсияАвтор.Автор, ВерсияАвтор.АвторПочта)
	, ОбщиеСтрока.СтрокаДата(ВерсияАвтор.АвторДата));
КонецПроцедуры

Процедура КомментарийИзменениеЗакончить(ГитКаталог) Экспорт
	КомандаВыполнить(ГитКаталог, "branch -f --no-track master");
	КомандаВыполнить(ГитКаталог, "checkout --ignore-other-worktrees master");
	КомандаВыполнить(ГитКаталог, "branch -D message-change-temp");
КонецПроцедуры